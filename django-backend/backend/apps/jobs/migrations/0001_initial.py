# Generated by Django 3.2.22 on 2024-01-07 12:39

import apps.jobs.models
import core.common.mixins
import core.common.utils
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('public_name', models.CharField(max_length=255, verbose_name='Public name')),
                ('image', models.ImageField(blank=True, null=True, upload_to=core.common.utils.PathAndRename('actions/'), verbose_name='Image')),
                ('type', models.IntegerField(choices=[(0, 'Generate'), (1, 'Undress')], verbose_name='Type')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('lora_name', models.CharField(default='', max_length=255, verbose_name='Lora name')),
                ('raw_prompt1', models.TextField(default='', verbose_name='Raw prompt')),
                ('raw_prompt2', models.TextField(default='', verbose_name='Raw prompt')),
            ],
            options={
                'verbose_name': 'Action',
                'verbose_name_plural': 'Actions',
            },
            bases=(core.common.mixins.ImageMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('public_name', models.CharField(max_length=255, verbose_name='Public name')),
                ('image', models.ImageField(blank=True, null=True, upload_to=core.common.utils.PathAndRename('categories/'), verbose_name='Image')),
                ('type', models.IntegerField(choices=[(0, 'Generate'), (1, 'Undress')], verbose_name='Type')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('raw_prompt', models.TextField(default='', verbose_name='Raw prompt')),
                ('raw_negative_prompt', models.TextField(default='', verbose_name='Raw negative prompt')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
            bases=(core.common.mixins.ImageMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Filter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('public_name', models.CharField(max_length=255, verbose_name='Public name')),
                ('image', models.ImageField(blank=True, null=True, upload_to=core.common.utils.PathAndRename('filters/'), verbose_name='Image')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('raw_prompt', models.TextField(default='', verbose_name='Raw prompt')),
                ('raw_negative_prompt', models.TextField(default='', verbose_name='Raw negative prompt')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='filters', to='jobs.category', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Filter',
                'verbose_name_plural': 'Filters',
            },
            bases=(core.common.mixins.ImageMixin, models.Model),
        ),
        migrations.CreateModel(
            name='GenerateJob',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(blank=True, max_length=10, null=True, verbose_name='User ID')),
                ('status', models.IntegerField(choices=[(0, 'Created'), (1, 'Process'), (2, 'Success'), (-1, 'Error')], default=0, verbose_name='Status')),
                ('positive_prompt', models.CharField(blank=True, max_length=500, null=True, verbose_name='Positive prompt')),
                ('negative_prompt', models.CharField(blank=True, max_length=500, null=True, verbose_name='Negative prompt')),
                ('step', models.IntegerField(default=20, verbose_name='Step')),
                ('sampler_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sampler name')),
                ('estimated_time', models.IntegerField(default=60, help_text='In second', verbose_name='Estimated time')),
                ('time_spent', models.IntegerField(default=0, help_text='In seconds', verbose_name='Time spent')),
                ('cost', models.DecimalField(decimal_places=2, default=0, max_digits=25, verbose_name='Cost')),
                ('show_in_profile', models.BooleanField(default=False, verbose_name='Show in profile')),
                ('need_blur', models.BooleanField(default=False, verbose_name='Need blur')),
                ('need_watermark', models.BooleanField(default=True, verbose_name='Need watermark')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Created')),
                ('image', models.ImageField(blank=True, null=True, upload_to=core.common.utils.PathAndRename('generate-jobs/'), verbose_name='Image')),
                ('blur_image', models.ImageField(blank=True, null=True, upload_to=core.common.utils.PathAndRename('blur-generate-jobs/'), verbose_name='Image blur')),
                ('without_watermark_image', models.ImageField(blank=True, null=True, upload_to=core.common.utils.PathAndRename('without-watermark-undress-jobs/'), verbose_name='Without watermark image')),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='jobs.action', verbose_name='Action')),
                ('filters', models.ManyToManyField(to='jobs.Filter', verbose_name='Filters')),
            ],
            options={
                'verbose_name': 'Generate job',
                'verbose_name_plural': 'Generate jobs',
            },
            bases=(core.common.mixins.ImageMixin, models.Model),
        ),
        migrations.CreateModel(
            name='SDModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('public_name', models.CharField(max_length=255, verbose_name='Public name')),
                ('model_name', models.CharField(default='', max_length=255, verbose_name='Model name')),
                ('type', models.IntegerField(choices=[(0, 'Generate'), (1, 'Undress')], verbose_name='Type')),
                ('image', models.ImageField(blank=True, null=True, upload_to=core.common.utils.PathAndRename('sd-models/'), verbose_name='Image')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('raw_prompt', models.TextField(default='', verbose_name='Raw prompt')),
                ('raw_negative_prompt', models.TextField(default='', verbose_name='Raw negative prompt')),
            ],
            options={
                'verbose_name': 'SD model',
                'verbose_name_plural': 'SD models',
            },
            bases=(core.common.mixins.ImageMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('image', models.ImageField(blank=True, null=True, upload_to=core.common.utils.PathAndRename('tags/'), verbose_name='Image')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
            bases=(core.common.mixins.ImageMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(0, 'None'), (1, 'Like'), (2, 'Dislike')], verbose_name='Type')),
                ('object_id', models.PositiveIntegerField()),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Created')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Reaction',
                'verbose_name_plural': 'Reactions',
            },
        ),
        migrations.CreateModel(
            name='UndressJob',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(blank=True, max_length=10, null=True, verbose_name='User ID')),
                ('status', models.IntegerField(choices=[(0, 'Created'), (1, 'Process'), (2, 'Success'), (-1, 'Error')], default=0, verbose_name='Status')),
                ('positive_prompt', models.CharField(blank=True, max_length=500, null=True, verbose_name='Positive prompt')),
                ('negative_prompt', models.CharField(blank=True, max_length=500, null=True, verbose_name='Negative prompt')),
                ('step', models.IntegerField(default=20, verbose_name='Step')),
                ('sampler_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sampler name')),
                ('estimated_time', models.IntegerField(default=60, help_text='In second', verbose_name='Estimated time')),
                ('time_spent', models.IntegerField(default=0, help_text='In seconds', verbose_name='Time spent')),
                ('cost', models.DecimalField(decimal_places=2, default=0, max_digits=25, verbose_name='Cost')),
                ('show_in_profile', models.BooleanField(default=False, verbose_name='Show in profile')),
                ('need_blur', models.BooleanField(default=False, verbose_name='Need blur')),
                ('need_watermark', models.BooleanField(default=True, verbose_name='Need watermark')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Created')),
                ('image', models.ImageField(blank=True, null=True, upload_to=core.common.utils.PathAndRename('undress-jobs/'), verbose_name='Image')),
                ('blur_image', models.ImageField(blank=True, null=True, upload_to=core.common.utils.PathAndRename('blur-undress-jobs/'), verbose_name='Image blur')),
                ('without_watermark_image', models.ImageField(blank=True, null=True, upload_to=core.common.utils.PathAndRename('without-watermark-undress-jobs/'), verbose_name='Without watermark image')),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='jobs.action', verbose_name='Action')),
                ('filters', models.ManyToManyField(to='jobs.Filter', verbose_name='Filters')),
                ('sd_model', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='jobs.sdmodel', verbose_name='SD model')),
            ],
            options={
                'verbose_name': 'Undress job',
                'verbose_name_plural': 'Undress jobs',
            },
            bases=(core.common.mixins.ImageMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ImageHub',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Created')),
                ('generate_job', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='in_hub', to='jobs.generatejob', verbose_name='Generate job')),
            ],
            options={
                'verbose_name': 'Image hub',
                'verbose_name_plural': 'Images hub',
            },
            bases=(core.common.mixins.ImageMixin, models.Model),
        ),
        migrations.AddField(
            model_name='generatejob',
            name='sd_model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='jobs.sdmodel', verbose_name='SD model'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=500, verbose_name='Text')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Created')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('patent', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='jobs.comment', verbose_name='Reply')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='jobs.imagehub', verbose_name='Post')),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
                'ordering': ['-created'],
            },
            bases=(models.Model,),
        ),
        migrations.AddField(
            model_name='category',
            name='tag',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='jobs.tag', verbose_name='Tag'),
        ),
        migrations.AddField(
            model_name='action',
            name='sd_model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='jobs.sdmodel', verbose_name='SD model'),
        ),
    ]
