# Generated by Django 3.2.22 on 2023-12-26

from django.db import migrations, models
import django.db.models.deletion


def add_tags(apps):
    Tag = apps.get_model('jobs', 'Tag')
    Tag.objects.bulk_create([
        Tag(id=1, name='Base'),
        Tag(id=2, name='Body'),
        Tag(id=3, name='Face'),
        Tag(id=4, name='Clothes'),
        Tag(id=5, name='Style'),
    ])


def add_categories(apps):
    Category = apps.get_model('jobs', 'Category')
    Category.objects.bulk_create([
        # Undress category
        Category(id=1, name='Female (Undress)', public_name='Female', type=1),
        Category(id=2, name='Male (Undress)', public_name='Male', type=1),
        # Generate category

        # Tag: Base
        Category(id=3, name='Model', public_name='Model', type=0, tag_id=1, raw_prompt='model'),
        Category(id=4, name='Number of people', public_name='Number of people', type=0, tag_id=1,
                 raw_prompt='number_of_people'),
        Category(id=5, name='Age', public_name='Age', type=0, tag_id=1, raw_prompt='age'),
        Category(id=6, name='Ethnicity', public_name='Ethnicity', type=0, tag_id=1, raw_prompt='ethnicity'),
        # Tag: Body
        Category(id=7, name='Type', public_name='Type', type=0, tag_id=2, raw_prompt='body_type'),
        Category(id=8, name='Skin', public_name='Skin', type=0, tag_id=2, raw_prompt='body_skin'),
        Category(id=9, name='Breast', public_name='Breast', type=0, tag_id=2, raw_prompt='breast'),
        Category(id=10, name='Ass', public_name='Ass', type=0, tag_id=2, raw_prompt='ass'),
        # Tag: Face
        Category(id=11, name='Type (Face)', public_name='Type', type=0, tag_id=3, raw_prompt='face_type'),
        Category(id=12, name='Hair color', public_name='Hair color', type=0, tag_id=3, raw_prompt='hair_color'),
        Category(id=13, name='Hair type', public_name='Hair type', type=0, tag_id=3, raw_prompt='hair_type'),
        # Tag: Clothes
        Category(id=14, name='Type (Clothes)', public_name='Type', type=0, tag_id=4, raw_prompt='clothes_type'),
        Category(id=15, name='Cloth modifier', public_name='Cloth modifier', type=0, tag_id=4, raw_prompt='clothes_modifier'),
        # Tag: Style
        Category(id=16, name='Distance', public_name='Distance', type=0, tag_id=5, raw_prompt='distance'),
        Category(id=17, name='Angle', public_name='Angle', type=0, tag_id=5, raw_prompt='angle'),
        Category(id=18, name='Action', public_name='Action', type=0, tag_id=5, raw_prompt='action'),
        Category(id=19, name='Setting', public_name='Setting', type=0, tag_id=5, raw_prompt='setting'),
        Category(id=20, name='Light', public_name='Light', type=0, tag_id=5, raw_prompt='light'),
        Category(id=21, name='Style', public_name='Style', type=0, tag_id=5, raw_prompt='style'),
    ])


NEW = 18


def add_filters(apps):
    Filter = apps.get_model('jobs', 'Filter')

    objs = [
        # Undress category
        # Category: Female
        Filter(id=1, name='Undress (Female)', public_name='Undress', category_id=1),
        Filter(id=2, name='Bra', public_name='Bra', category_id=1),
        Filter(id=3, name='Bikini', public_name='Bikini', category_id=1),
        Filter(id=4, name='Tattoo (Female)', public_name='Tattoo', category_id=1),
        # Category: Male
        Filter(id=5, name='Undress (Male)', public_name='Undress', category_id=2),
        Filter(id=6, name='Underwear', public_name='Underwear', category_id=2),
        Filter(id=7, name='Beard', public_name='Beard', category_id=2),
        Filter(id=8, name='Tattoo (Male)', public_name='Tattoo', category_id=2),

        # Generate category
        # Category: Model
        Filter(id=9, name='Woman', public_name='Woman', category_id=3, raw_prompt='woman'),
        Filter(id=10, name='Man', public_name='Man', category_id=3, raw_prompt='man'),
        Filter(id=11, name='Transgender', public_name='Transgender', category_id=3, raw_prompt='transgender'),
        # Category: Number of people
        Filter(id=12, name='One', public_name='One', category_id=4, raw_prompt='one'),
        Filter(id=13, name='Two', public_name='Two', category_id=4, raw_prompt='two'),
        Filter(id=14, name='Several', public_name='Several', category_id=4, raw_prompt='several'),
        # Category: Age
        Filter(id=15, name='18s', public_name='18s', category_id=5, raw_prompt='very young'),
        Filter(id=16, name='20s - 30s', public_name='20s - 30s', category_id=5, raw_prompt='young'),
        Filter(id=17, name='40s - 50s', public_name='40s - 50s', category_id=5, raw_prompt='adult'),
        Filter(id=18, name='60+', public_name='60+', category_id=5, raw_prompt='milf'),
    ]

    def get_id():
        global NEW
        NEW += 1
        return NEW

    # Ethnicity
    objs.extend([
        Filter(id=get_id(), name=obj.name, public_name=obj.name, category_id=6, raw_prompt=obj.name.lower())
        for obj in apps.get_model('hub', 'FilterEthnicity').objects.all()
    ])
    # Body type
    objs.extend([
        Filter(id=get_id(), name=obj.name, public_name=obj.name, category_id=7, raw_prompt=obj.name.lower())
        for obj in apps.get_model('hub', 'FilterBodyType').objects.all()
    ])
    # Skin
    objs.extend([
        Filter(id=get_id(), name=obj.name, public_name=obj.name, category_id=8, raw_prompt=obj.name.lower())
        for obj in apps.get_model('hub', 'FilterSkin').objects.all()
    ])
    # Breast
    objs.extend([
        Filter(id=get_id(), name=obj.name, public_name=obj.name, category_id=9, raw_prompt=obj.name.lower())
        for obj in apps.get_model('hub', 'FilterBreast').objects.all()
    ])
    # Ass
    objs.extend([
        Filter(id=get_id(), name=obj.name, public_name=obj.name, category_id=10, raw_prompt=obj.name.lower())
        for obj in apps.get_model('hub', 'FilterAss').objects.all()
    ])
    # Face Type
    objs.extend([
        Filter(id=get_id(), name=obj.name, public_name=obj.name, category_id=11, raw_prompt=obj.name.lower())
        for obj in apps.get_model('hub', 'FilterFace').objects.all()
    ])
    # Hair color
    objs.extend([
        Filter(id=get_id(), name=obj.name, public_name=obj.name, category_id=12, raw_prompt=obj.name.lower())
        for obj in apps.get_model('hub', 'FilterHairColor').objects.all()
    ])
    # Hair type
    objs.extend([
        Filter(id=get_id(), name=obj.name, public_name=obj.name, category_id=13, raw_prompt=obj.name.lower())
        for obj in apps.get_model('hub', 'FilterHairType').objects.all()
    ])
    # Clothes type
    objs.extend([
        Filter(id=get_id(), name=obj.name, public_name=obj.name, category_id=14, raw_prompt=obj.name.lower())
        for obj in apps.get_model('hub', 'FilterClothes').objects.all()
    ])
    # Cloth modifier
    objs.extend([
        Filter(id=get_id(), name=obj.name, public_name=obj.name, category_id=15, raw_prompt=obj.name.lower())
        for obj in apps.get_model('hub', 'FilterClothModifier').objects.all()
    ])
    # Distance
    objs.extend([
        Filter(id=get_id(), name=obj.name, public_name=obj.name, category_id=16, raw_prompt=obj.name.lower())
        for obj in apps.get_model('hub', 'FilterDistance').objects.all()
    ])
    # Angle
    objs.extend([
        Filter(id=get_id(), name=obj.name, public_name=obj.name, category_id=17, raw_prompt=obj.name.lower())
        for obj in apps.get_model('hub', 'FilterAngle').objects.all()
    ])
    # Action
    objs.extend([
        Filter(id=get_id(), name=obj.name, public_name=obj.name, category_id=18, raw_prompt=obj.name.lower())
        for obj in apps.get_model('hub', 'FilterAction').objects.all()
    ])
    # Setting
    objs.extend([
        Filter(id=get_id(), name=obj.name, public_name=obj.name, category_id=19, raw_prompt=obj.name.lower())
        for obj in apps.get_model('hub', 'FilterSetting').objects.all()
    ])
    # Light
    objs.extend([
        Filter(id=get_id(), name=obj.name, public_name=obj.name, category_id=20, raw_prompt=obj.name.lower())
        for obj in apps.get_model('hub', 'FilterLight').objects.all()
    ])
    # Style
    objs.extend([
        Filter(id=get_id(), name=obj.name, public_name=obj.name, category_id=21, raw_prompt=obj.name.lower())
        for obj in apps.get_model('hub', 'FilterStyle').objects.all()
    ])

    Filter.objects.bulk_create(objs)


def add_sd_models(apps):
    SDModel = apps.get_model('jobs', 'SDModel')

    SDModel.objects.bulk_create([
        SDModel(id=1, name='Default (Undress)', public_name='Default',
                model_name='realisticVisionV40_v40VAE-inpainting_81543.safetensors', type=1),

        # Generate
        SDModel(id=2, name='Photorealistic (Generate)', public_name='Photorealistic',
                model_name='realisticAfmix_realisticAfmix_75178.safetensors', type=0,
                raw_prompt='a photo of'),
        SDModel(id=3, name='Cartoon (Generate)', public_name='Cartoon',
                model_name='samaritan3dCartoon_v10_58927.safetensors', type=0,
                raw_prompt='cartoon image of'),
        SDModel(id=4, name='Anime (Generate)', public_name='Anime',
                model_name='anyhentai_18_11144.safetensors', type=0,
                raw_prompt='anime draw of'),
        SDModel(id=5, name='Furry art (Generate)', public_name='Furry art',
                model_name='crosskemonoFurryModel_crosskemono25_35205.safetensors', type=0,
                raw_prompt='art of'),
        SDModel(id=6, name='3D (Generate)', public_name='3D',
                model_name='3Guofeng3_v33_29387.safetensors', type=0,
                raw_prompt='3d render of'),
        SDModel(id=7, name='Art (Generate)', public_name='Art',
                model_name='byssorangemix2NSFW_abyssorangemix2Nsfw.safetensors', type=0,
                raw_prompt='image of'),
    ])


def add_actions(apps):
    Action = apps.get_model('jobs', 'Action')

    Action.objects.bulk_create([
        Action(id=1, name='Default (Undress)', public_name='Default', type=1, sd_model_id=1),

        Action(id=2, name='Default (Generate)', public_name='Default', type=0, sd_model_id=2),

        Action(id=3, name='Creampie (Photorealistic Generate)', public_name='Creampie', type=0, sd_model_id=2,
               lora_name='<lora:Creampie_cumdripV2:1>', raw_prompt1='((with cumshot on her body))',
               raw_prompt2='pussy juice, spread pussy, '),
        Action(id=4, name='Creampie (Cartoon Generate)', public_name='Creampie', type=0, sd_model_id=3,
               lora_name='<lora:Creampie_cumdripV2:1>', raw_prompt1='((with cumshot on her body))',
               raw_prompt2='pussy juice, spread pussy, '),
        Action(id=5, name='Creampie (Anime Generate)', public_name='Creampie', type=0, sd_model_id=4,
               lora_name='<lora:Creampie_cumdripV2:1>', raw_prompt1='((with cumshot on her body))',
               raw_prompt2='pussy juice, spread pussy, '),
        Action(id=6, name='Creampie (Furry art Generate)', public_name='Creampie', type=0, sd_model_id=5,
               lora_name='<lora:Creampie_cumdripV2:1>', raw_prompt1='((with cumshot on her body))',
               raw_prompt2='pussy juice, spread pussy, '),
        Action(id=7, name='Creampie (3D Generate)', public_name='Creampie', type=0, sd_model_id=6,
               lora_name='<lora:Creampie_cumdripV2:1>', raw_prompt1='((with cumshot on her body))',
               raw_prompt2='pussy juice, spread pussy, '),
        Action(id=8, name='Creampie (Art Generate)', public_name='Creampie', type=0, sd_model_id=7,
               lora_name='<lora:Creampie_cumdripV2:1>', raw_prompt1='((with cumshot on her body))',
               raw_prompt2='pussy juice, spread pussy, '),

        Action(id=9, name='TitJob (Photorealistic Generate)', public_name='Tit job', type=0, sd_model_id=2,
               lora_name='<lora:TitFuckv1:0.9>', raw_prompt1='titjob, breasts, (perfect penis)'),
        Action(id=10, name='TitJob (Cartoon Generate)', public_name='Tit job', type=0, sd_model_id=3,
               lora_name='<lora:TitFuckv1:0.9>', raw_prompt1='titjob, breasts, (perfect penis)'),
        Action(id=11, name='TitJob (Anime Generate)', public_name='Tit job', type=0, sd_model_id=4,
               lora_name='<lora:TitFuckv1:0.9>', raw_prompt1='titjob, breasts, (perfect penis)'),
        Action(id=12, name='TitJob (Furry art Generate)', public_name='Tit job', type=0, sd_model_id=5,
               lora_name='<lora:TitFuckv1:0.9>', raw_prompt1='titjob, breasts, (perfect penis)'),
        Action(id=13, name='TitJob (3D Generate)', public_name='Tit job', type=0, sd_model_id=6,
               lora_name='<lora:TitFuckv1:0.9>', raw_prompt1='titjob, breasts, (perfect penis)'),
        Action(id=14, name='TitJob (Art Generate)', public_name='Tit job', type=0, sd_model_id=7,
               lora_name='<lora:TitFuckv1:0.9>', raw_prompt1='titjob, breasts, (perfect penis)'),

        Action(id=15, name='Anal (Photorealistic Generate)', public_name='Anal', type=0, sd_model_id=2,
               lora_name='<lora:PovMissionaryAnalv6:1>', raw_prompt1='(beautiful ass), spread pussy, perfect penis',
               raw_prompt2='anal photo, '),
        Action(id=16, name='Anal (Cartoon Generate)', public_name='Anal', type=0, sd_model_id=3,
               lora_name='<lora:PovMissionaryAnalv6:1>', raw_prompt1='(beautiful ass), spread pussy, perfect penis',
               raw_prompt2='anal photo, '),
        Action(id=17, name='Anal (Anime Generate)', public_name='Anal', type=0, sd_model_id=4,
               lora_name='<lora:PovMissionaryAnalv6:1>', raw_prompt1='(beautiful ass), spread pussy, perfect penis',
               raw_prompt2='anal photo, '),
        Action(id=18, name='Anal (Furry art Generate)', public_name='Anal', type=0, sd_model_id=5,
               lora_name='<lora:PovMissionaryAnalv6:1>', raw_prompt1='(beautiful ass), spread pussy, perfect penis',
               raw_prompt2='anal photo, '),
        Action(id=19, name='Anal (3D Generate)', public_name='Anal', type=0, sd_model_id=6,
               lora_name='<lora:PovMissionaryAnalv6:1>', raw_prompt1='(beautiful ass), spread pussy, perfect penis',
               raw_prompt2='anal photo, '),
        Action(id=20, name='Anal (Art Generate)', public_name='Anal', type=0, sd_model_id=7,
               lora_name='<lora:PovMissionaryAnalv6:1>', raw_prompt1='(beautiful ass), spread pussy, perfect penis',
               raw_prompt2='anal photo, '),

        Action(id=21, name='Vagina (Photorealistic Generate)', public_name='Vagina', type=0, sd_model_id=2,
               lora_name='<lora:CloseUpVaginalv1:1>',
               raw_prompt1='((correct Vagina)), (((naked Vagina))), sexy essential pose'),
        Action(id=22, name='Vagina (Cartoon Generate)', public_name='Vagina', type=0, sd_model_id=3,
               lora_name='<lora:CloseUpVaginalv1:1>',
               raw_prompt1='((correct Vagina)), (((naked Vagina))), sexy essential pose'),
        Action(id=23, name='Vagina (Anime Generate)', public_name='Vagina', type=0, sd_model_id=4,
               lora_name='<lora:CloseUpVaginalv1:1>',
               raw_prompt1='((correct Vagina)), (((naked Vagina))), sexy essential pose'),
        Action(id=24, name='Vagina (Furry art Generate)', public_name='Vagina', type=0, sd_model_id=5,
               lora_name='<lora:CloseUpVaginalv1:1>',
               raw_prompt1='((correct Vagina)), (((naked Vagina))), sexy essential pose'),
        Action(id=25, name='Vagina (3D Generate)', public_name='Vagina', type=0, sd_model_id=6,
               lora_name='<lora:CloseUpVaginalv1:1>',
               raw_prompt1='((correct Vagina)), (((naked Vagina))), sexy essential pose'),
        Action(id=26, name='Vagina (Art Generate)', public_name='Vagina', type=0, sd_model_id=7,
               lora_name='<lora:CloseUpVaginalv1:1>',
               raw_prompt1='((correct Vagina)), (((naked Vagina))), sexy essential pose'),
    ])


def forwards_func(apps, schema_editor):
    add_tags(apps)
    add_categories(apps)
    add_filters(apps)
    add_sd_models(apps)
    add_actions(apps)


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('jobs', '0001_initial'),
        ('hub', '0002_add_base_filters'),
    ]

    operations = [
        migrations.RunPython(forwards_func),
    ]
