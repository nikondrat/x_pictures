# Generated by Django 3.2.22 on 2023-12-28 15:23

from django.utils import timezone
from django.db import migrations


def forwards_func(apps, schema_editor):
    User = apps.get_model('users', 'User')
    UndressJob = apps.get_model('accounts', 'UndressJob')
    UserSubscription = apps.get_model('subscriptions', 'UserSubscription')
    ProfileSubscription = apps.get_model('profiles', 'ProfileSubscription')

    find_user_ids = []
    for sub in UserSubscription.objects.exclude(
            subscription_id__in=(1, 2),  # Free
    ).filter(
        active=True,
        end_period__gte=timezone.now(),
    ).distinct('user_id'):
        find_user_ids.append(sub.user_id)
        if User.objects.get(pk=sub.user_id).deleted_account:
            continue
        if sub.subscription_id == 3:
            profile_subscription = ProfileSubscription.objects.create(profile_id=sub.user_id,
                                                                      subscription_id=3,
                                                                      end_period=sub.end_period)
            tokens = 200 - UndressJob.objects.filter(
                user_id=sub.user_id,
                created__gte=sub.start_period,
                created__lte=sub.end_period,
            ).count()

            profile_subscription.profile.balance = tokens if tokens >= 0 else 0
            profile_subscription.profile.type = 'premium'
            profile_subscription.profile.save()
        else:
            profile_subscription = ProfileSubscription.objects.create(profile_id=sub.user_id,
                                                                      subscription_id=5,
                                                                      end_period=sub.end_period)
            tokens = 2400 - UndressJob.objects.filter(
                user_id=sub.user_id,
                created__gte=sub.start_period,
                created__lte=sub.end_period,
            ).count()

            profile_subscription.profile.balance = tokens if tokens >= 0 else 0
            profile_subscription.profile.type = 'super_premium'
            profile_subscription.profile.save()


class Migration(migrations.Migration):

    dependencies = [
        ('profiles', '0003_create_profiles')
    ]

    operations = [
        migrations.RunPython(forwards_func),
    ]
